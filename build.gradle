plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.gorylenko.gradle-git-properties" version '2.2.3'
    id "org.asciidoctor.jvm.convert" version '3.3.2'
}

group = 'starter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootJar {
    layered
    dependsOn asciidoctor
    copy {
        from '${asciidoctor.outputDir}'
        into 'BOOT-INF/classes/static/docs'
    }
    finalizedBy 'copyDocument'
}

task copyDocument(type: Copy) {
    dependsOn bootJar
    from file("src/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation ('org.springframework.boot:spring-boot-starter-hateoas') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    }
    implementation 'io.projectreactor.tools:blockhound:1.0.6.RELEASE'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    implementation 'org.mongodb:mongodb-driver-sync'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    implementation platform('org.testcontainers:testcontainers-bom:1.17.3') //import bom
    testImplementation 'org.testcontainers:rabbitmq'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
//    testImplementation 'io.projectreactor.tools:blockhound-junit-platform:1.0.6.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine',
            'org.junit.vintage:junit-vintage-engine',
            'org.junit.platform:junit-platform-launcher',
            'org.junit.platform:junit-platform-runner'
    )
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

processResources {
    filesMatching("**/application.yml") {
        expand(project.properties)
    }
}
